{"version":3,"file":"users.min.js","sources":["../src/users.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Potential user selector module.\n *\n * @module     local_organization/users\n * @class      users\n * @package    local_organization\n **/\n\ndefine(['jquery', 'core/ajax', 'core/templates', 'core/str'], function($, Ajax, Templates, Str) {\n\n    return /** @alias module:local_organization/users */ {\n\n        transport: function(selector, query, success, failure) { //Fetches results via ajax call\n            let promise;\n            let perpage = 50;\n\n            promise = Ajax.call([{\n                methodname: 'organization_users_get',\n                args: {\n                    name: query,\n                }\n            }]);\n\n            promise[0].then(function(results) {\n                if (results.length <= perpage) {\n                    //console.log(results);\n                    //Callback function returns an array to processResults containing the results obtained from the Ajax call\n                    success(results);\n                    return;\n                }\n                else {\n                    return Str.get_string('toomanyresults', 'local_organization', '>' + perpage).then(function(toomanyresults) {\n                        success(toomanyresults);\n                        return;\n                    });\n                }\n\n\n            }).fail(failure);\n        },\n\n        processResults: function(selector, results) { //Fetches results from transport and returns to form menu\n            let records = [];\n            if ($.isArray(results)) {\n                $.each(results, function(index, record) {\n                    records.push({\n                        //the value of the item selected and that is passed into the form?\n                        value: record.id,\n                        //The text that displays inside the selection menu\n                        label: record.firstname + \" \" + record.lastname + ' (' + record.email + ')'\n                    });\n                });\n                return records;\n\n            } else {\n                return results;\n            }\n        }\n\n\n    };\n\n});\n"],"names":["define","$","Ajax","Templates","Str","transport","selector","query","success","failure","promise","call","methodname","args","name","then","results","length","get_string","toomanyresults","fail","processResults","records","isArray","each","index","record","push","value","id","label","firstname","lastname","email"],"mappings":"AAuBAA,kCAAO,CAAC,SAAU,YAAa,iBAAkB,aAAa,SAASC,EAAGC,KAAMC,UAAWC,WAElC,CAEjDC,UAAW,SAASC,SAAUC,MAAOC,QAASC,aACtCC,QAGJA,QAAUR,KAAKS,KAAK,CAAC,CACjBC,WAAY,yBACZC,KAAM,CACFC,KAAMP,UAIdG,QAAQ,GAAGK,MAAK,SAASC,gBACjBA,QAAQC,QAVF,QAaNT,QAAQQ,SAIDZ,IAAIc,WAAW,iBAAkB,qBAAsB,OAAeH,MAAK,SAASI,gBACvFX,QAAQW,sBAMjBC,KAAKX,UAGZY,eAAgB,SAASf,SAAUU,aAC3BM,QAAU,UACVrB,EAAEsB,QAAQP,UACVf,EAAEuB,KAAKR,SAAS,SAASS,MAAOC,QAC5BJ,QAAQK,KAAK,CAETC,MAAOF,OAAOG,GAEdC,MAAOJ,OAAOK,UAAY,IAAML,OAAOM,SAAW,KAAON,OAAOO,MAAQ,SAGzEX,SAGAN"}